*,
::before,
::after {
  padding: 0;
  margin: 0;
  border: 0;
  box-sizing: border-box;
}

a {
  text-decoration: none;
}

ul,
ol,
li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
}

/* ---------------------сбросил отступы----------------------------------- */

html,
body {
  height: 100%;
  line-height: 1;
  font-size: 14px;
  font-weight: 500;
  color: #252b42;
  font-family: Montserrat;
}

/* -----------------------------разметка--------------------------- */

.wrapper {
  min-height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

._container {
  max-width: 1046px;
  padding: 0 15px;
  margin: 0 auto;
  box-sizing: content-box; /* чтоб контент растягивался в контейнере с учетом добавочных padding */
}

._ibg {
  position: relative;
}

._ibg img {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover; /* Свойство object-fit определяет, как содержимое заменяемого элемента, такого как <img> или <video>, должно заполнять контейнер относительно его высоты и ширины. */
}

/* ----------------------------рабочие контейнеры---------------------------- */

.header {
  position: absolute;
  width: 100%;
  left: 0;
  top: 0;
  z-index: 50;
}

.header__container {
  display: flex;
  align-items: center;
  min-height: 104px;
}

@media (max-width: 479px) {
  .header__container {
    min-height: 70px;
  }
}

.header__logo {
  font-weight: 700;
  font-size: 24px;
  line-height: 32px;
  color: inherit;
}

.header__menu {
  margin-left: 133px;
}

@media (max-width: 992px) {
  .header__menu {
    margin-left: 80px;
  }
}

@media (max-width: 767px) {
  .header__menu {
    margin-left: 40px;
  }
}

@media (max-width: 479px) {
  .header__menu {
    margin-left: 20px;
  }
}

.menu {
  padding: 5px 0;
}
.menu__list {
  display: flex;
  flex-wrap: wrap;
}
.menu__item {
  margin-left: 21px;
}
.menu__link {
  font-weight: 600;
  font-size: 14px;
  color: #737373;
  line-height: calc(24 / 14 * 100%);
  /* желательно высоты прописывать в процентах, так лучше при адаптиве */
}

@media (max-width: 479px) {
  .menu__link {
    font-size: 18px;
  }
}

/* ----------------------------блок header---------------------------- */

.page {
  flex: 1 1 auto;
}

.page__main-block {
}

.page__services {
  position: relative;
  z-index: 2;
  margin-top: -111px;
  /* если необходимо поднять какие-то блоки поверх другого блока то используется отрицательный margin, при таком подходе поднимется равномерно весь нижний контент. Так-же использую  position: relative;
  z-index: 2; чтоб  поместить необходимый контент поверх блока   */
}

/* --------------------------блок элементы класса---------------------------- */

.main-block {
  position: relative;
}

.main-block__container {
}

._container {
}

.main-block__body {
  padding: 184px 0 191px;
  position: relative;
  z-index: 2;
  max-width: 400px;
}

@media (max-width: 992px) {
  .main-block__body {
    padding: 120px 0px 192px 0px;
  }
}
.main-block__body > * {
  margin-bottom: 35px;
  /* интересная фишка чтоб сохранить все отступы даже если контент удалится либо добавится, дословно так: во всем ограничивающем контейнере все блочные элементы первого уровня сдвигаются вниз на 35px */
}

.main-block__title {
  font-weight: 800;
  font-size: 58px;
  line-height: calc(80 / 58 * 100%);
  letter-spacing: 0.2px;
}

@media (max-width: 479px) {
  .main-block__title {
    font-size: 42px;
  }
}
.main-block__text {
  color: #737373;
  font-size: 20px;
  line-height: calc(30 / 20 * 100%);
  letter-spacing: 0.2px;
}

@media (max-width: 479px) {
  .main-block__text {
    color: #211010;
  }
}

.main-block__buttons {
  display: flex;
  flex-wrap: wrap;
  margin: -10px 0;
  /* display: inline-flex; В общем, это означает то, что если элементы потомки не слишком велики, то два контейнера с display: inline-flex могут идти бок о бок в одной строке. */
}

.main-block__button {
  border-radius: 37px;
  display: flex;
  min-height: 48px;
  letter-spacing: 0.2px;
  font-weight: 700;
  font-size: 14px;
  line-height: calc(28 / 14 * 100%);
  align-items: center;
  justify-content: center;
  padding: 5px 36px;
  text-align: center;
  margin: 10px 0;
  /* кнопка сделанная таким образом при добавлении контента будет автоматически увеличиватся пропорционально */
}

@media (max-width: 479px) {
  .main-block__button {
    flex: 1 1 100%;
  }
}

@media (min-width: 479px) {
  .main-block__button:last-child {
    margin-left: 10px;
  }
}

.main-block__button_orange {
  background: #ff7b47;
  color: #ffffff;
}
.main-block__button_border {
  border: 1px solid #0d5c63;
  color: #0d5c63;
}

.main-block__img {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

@media (max-width: 1300px) {
  .main-block__img img {
    object-position: right;
    /* данным свойством я могу изменить позиционирование картинки, применяется непосредственно к обьекту через класс */
  }
}

@media (max-width: 992px) {
  .main-block__img {
    opacity: 0.3;
  }
}

/* ----------------------------блок main---------------------------- */

.services {
}
.services__container {
}


@media (min-width: 670px) {
  .services__body {
    display: flex;
    flex-wrap: wrap;
    margin: 0px -15px -30px;
  }
}

.services__column {
  flex: 0 1 33.333%;
  margin-top: 30px;
  /* самый простой способ задать равные отступы внутри у блоков */
}

@media (min-width: 670px) {
  .services__column {
    padding: 0px 15px;
  }
}

@media (max-width: 992px) {
  .services__column {
    flex: 0 1 50%;
  }
}

@media (max-width: 992px) {
  .services__column:last-child {
    flex: 0 1 100%;
  }
}
.services__item {
  box-shadow: 0px 13px 19px rgba(0, 0, 0, 0.07);
  background-color: #ffffff;
  padding: 35px;
  height: 100%;
  /* при добавлении контента карточки будут увеличиваться пропорционально при добавлении height: 100%;  */
}
.item-service {
}

.item-service > * {
  margin-bottom: 10px;
}

.item-service__icon {
}

._green {
  background-color: #0d5c63;
}

._green .item-service__title {
  color: #ffffff;
  /* изменить цвета текстов можно через добавление к модификатору необходимого div */
}

._green .item-service__text {
  color: #ffffff;
  /* изменить цвета текстов можно через добавление к модификатору необходимого div */
}

.item-service__title {
  font-weight: 700;
  font-size: 24px;
  line-height: calc(32 / 24 * 100%);
  letter-spacing: 0.1px;
  color: #252b42;
}
.item-service__text {
  font-weight: 500;
  font-size: 14px;
  line-height: calc(20 / 14 * 100%);
  letter-spacing: 0.2px;
  color: #737373;
}

/* ----------------------------блок services---------------------------- */

/* ----------------------------блок footer---------------------------- */
